#!/bin/bash

CONFIG_FILE="deploy.conf"
PASSWD_FILE="deploy/PASSWD"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
    elif [ -f "$SCRIPT_DIR/$CONFIG_FILE" ]; then
        source "$SCRIPT_DIR/$CONFIG_FILE"
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
get_password() {
    if [ -f "$PASSWD_FILE" ]; then
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–æ–ª–µ–º
        PASSWORD=$(head -n 1 "$PASSWD_FILE")
        echo "üîë –ü–∞—Ä–æ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ $PASSWD_FILE"
    else
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        read -s -p "üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å SSH: " PASSWORD
        echo
    fi
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_USER="username"
DEFAULT_IP="8.8.4.4"
DEFAULT_REMOTE_PATH="root/"
DEFAULT_LOCAL_WAR_PATH=""
DEFAULT_REMOTE_FILENAME="server.jar"
DEFAULT_SSH_PORT="22"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
load_config

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
parse_arguments() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            -u|--user) DEPLOY_USER="$2"; shift 2 ;;
            -i|--ip) DEPLOY_IP="$2"; shift 2 ;;
            -p|--path) REMOTE_PATH="$2"; shift 2 ;;
            -l|--local-path) LOCAL_WAR_PATH="$2"; shift 2 ;;
            -f|--filename) REMOTE_FILENAME="$2"; shift 2 ;;
            --ssh-port) SSH_PORT="$2"; shift 2 ;;
            -c|--config) CONFIG_FILE="$2"; load_config; shift 2 ;;
            --passwd-file) PASSWD_FILE="$2"; shift 2 ;;
            -h|--help) show_help; exit 0 ;;
            *) echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"; show_help; exit 1 ;;
        esac
    done
}

show_help() {
    cat << EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [OPTIONS]

OPTIONS:
  -u, --user USER          –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SSH
  -i, --ip IP              IP/—Ö–æ—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞
  -p, --path PATH          –ü—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  -l, --local-path PATH    –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ WAR
  -f, --filename NAME      –ò–º—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  --ssh-port PORT          SSH –ø–æ—Ä—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 22)
  -c, --config FILE        –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
  --passwd-file FILE       –§–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: PASSWD)
  -h, --help               –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª (deploy.conf) –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
  DEPLOY_USER, DEPLOY_IP, REMOTE_PATH, LOCAL_WAR_PATH, 
  REMOTE_FILENAME, SSH_PORT

–§–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º (PASSWD) –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–∞—Ä–æ–ª—å –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ.
–ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ.

–ü—Ä–∏–º–µ—Ä deploy.conf:
  DEPLOY_USER="s467525"
  DEPLOY_IP="se.ifmo.ru"
  REMOTE_PATH="httpd-root/fcgi-bin"
  LOCAL_WAR_PATH="build/libs/server.war"
  REMOTE_FILENAME="server.jar"
  SSH_PORT="22"

–ü—Ä–∏–º–µ—Ä PASSWD —Ñ–∞–π–ª–∞:
  my_secure_password
EOF
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
set_final_values() {
    USER="${DEPLOY_USER:-$DEFAULT_USER}"
    IP="${DEPLOY_IP:-$DEFAULT_IP}"
    REMOTE_PATH="${REMOTE_PATH:-$DEFAULT_REMOTE_PATH}"
    LOCAL_WAR_PATH="${LOCAL_WAR_PATH:-$DEFAULT_LOCAL_WAR_PATH}"
    REMOTE_FILENAME="${REMOTE_FILENAME:-$DEFAULT_REMOTE_FILENAME}"
    SSH_PORT="${SSH_PORT:-$DEFAULT_SSH_PORT}"
    
    REMOTE_FILE_PATH="$REMOTE_PATH/$REMOTE_FILENAME"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local deps=("npm" "gradlew" "scp" "sshpass")
    for dep in "${deps[@]}"; do
        if ! command -v "$dep" &> /dev/null && [ "$dep" != "gradlew" ]; then
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ç—Ä–µ–±—É–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: $dep"
            echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ sshpass: sudo apt-get install sshpass"
            exit 1
        fi
    done
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è
copy_with_password() {
    local source="$1"
    local destination="$2"
    
    if [ -f "$PASSWD_FILE" ]; then
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º sshpass —Å —Ñ–∞–π–ª–æ–º
        if ! sshpass -f "$PASSWD_FILE" scp -o StrictHostKeyChecking=no -P "$SSH_PORT" "$source" "$destination"; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
            return 1
        fi
    else
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º sshpass —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (–º–µ–Ω–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        if ! sshpass -p "$PASSWORD" scp -o StrictHostKeyChecking=no -P "$SSH_PORT" "$source" "$destination"; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
            return 1
        fi
    fi
}

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è
ssh_with_password() {
    local command="$1"
    
    if [ -f "$PASSWD_FILE" ]; then
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º sshpass —Å —Ñ–∞–π–ª–æ–º
        sshpass -f "$PASSWD_FILE" ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$USER@$IP" "$command"
    else
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º sshpass —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$USER@$IP" "$command"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
deploy() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–µ–ø–ª–æ—è..."
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–æ–ª—å
    get_password
    
    # –°–±–æ—Ä–∫–∞
    echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (npm)..."
    if ! npm run build; then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
        return 1
    fi
    
    echo "üî® –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ (Gradle)..."
    if ! ./gradlew war; then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –±—ç–∫–µ–Ω–¥–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ WAR —Ñ–∞–π–ª–∞
    if [ ! -f "$LOCAL_WAR_PATH" ]; then
        echo "‚ùå WAR —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOCAL_WAR_PATH"
        return 1
    fi
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    echo "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    if ! copy_with_password "$LOCAL_WAR_PATH" "$USER@$IP:$REMOTE_FILE_PATH"; then
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        return 1
    fi
    
    # –î–µ–ø–ª–æ–π –Ω–∞ WildFly
    echo "üéØ –î–µ–ø–ª–æ–π –Ω–∞ WildFly..."
    if ! deploy_to_wildfly; then
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è –Ω–∞ WildFly"
        return 1
    fi
    
    echo "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo "https://itmo.ssngn.ru/lab2/"
}

# –î–µ–ø–ª–æ–π –Ω–∞ WildFly —á–µ—Ä–µ–∑ CLI
deploy_to_wildfly() {
    local temp_war_name="${REMOTE_FILENAME%.*}"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è
    #         deploy $REMOTE_FILE_PATH --name=$temp_war_name
    local deploy_script=$(cat << EOF
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WildFly CLI
    /opt/u0_wildfly/bin/jboss-cli.sh --connect \
        --controller=$WILDFLY_HOST:$WILDFLY_PORT \
        --user=$WILDFLY_USER \
        --password=$WILDFLY_PASSWORD << EOC

        deploy -l
EOC
EOF
    )
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh_with_password "$deploy_script"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    parse_arguments "$@"
    set_final_values
    
    echo "=== –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–µ–ø–ª–æ—è ==="
    echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER"
    echo "–°–µ—Ä–≤–µ—Ä: $IP"
    echo "SSH –ø–æ—Ä—Ç: $SSH_PORT"
    echo "–õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª: $LOCAL_WAR_PATH"
    echo "–£–¥–∞–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å: $REMOTE_FILE_PATH"
    echo "–§–∞–π–ª —Å –ø–∞—Ä–æ–ª–µ–º: $PASSWD_FILE"
    echo "========================"
    
    check_dependencies
    deploy
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"